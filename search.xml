<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于HAL库的定时器中断学习汇总</title>
      <link href="/2025/01/28/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E4%B8%AD%E6%96%AD%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/"/>
      <url>/2025/01/28/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E4%B8%AD%E6%96%AD%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1>定时器用作计时器的基本概念理解</h1><ul class="lvl-0"><li class="lvl-2">定时器最基本的就是时基单元的理解，时基单元主要由分频器（PSC），CNT计数器，自动重装载寄存器</li><li class="lvl-2">计算定时器频率的公式<br>$$f_{定时器}=\frac{f_原}{(PSC+1)(ARR+1)}$$</li></ul><p><small>PSC：分频系数（值为1时，频率是原来的1/2）</small></p><p>ARR:设定的目标值<br></p><ul class="lvl-0"><li class="lvl-2"><p>定时器有多种计数方式</p></li></ul><blockquote><p><strong>向上计数</strong>: 计数器从0计数到自动加载值(TIMx_ARR计数器的内容)，然后重新从0开始计数并且产生一个计数器溢出事件.</p></blockquote><blockquote><p><strong>向下计数</strong> ：计数器从自动装入的值(TIMx_ARR计数器的值)开始向下计数到0，然后从自动装入的值重新开始并且产生一个计数器向下溢出事件。</p></blockquote><blockquote><p><strong>中央对齐模式</strong>(向上/向下计数) ：计数器从0开始计数到自动加载的值(TIMx_ARR寄存器)−1，产生一个计数器溢出事件，然后向下计数到1并且产生一个计数器下溢事件；然后再从0开始重新计数。</p></blockquote><hr><p><img src="/2025/01/28/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E4%B8%AD%E6%96%AD%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84.jpg" alt="定时中断基本结构"></p><h1>在Cubemx内如何配置定时器</h1><p><img src="/2025/01/28/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E4%B8%AD%E6%96%AD%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/%E6%97%B6%E9%92%9F%E6%A0%91%E9%85%8D%E7%BD%AE.png" alt="时钟树配置"></p><p><img src="/2025/01/28/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E4%B8%AD%E6%96%AD%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/1s%E5%91%A8%E6%9C%9F%E7%9A%84%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE.png" alt="1s周期的参数设定（举个例子）"></p><p><img src="/2025/01/28/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E4%B8%AD%E6%96%AD%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/%E5%BC%80%E5%90%AF%E4%B8%AD%E6%96%AD.png" alt="别忘了开启中断"></p><p><img src="/2025/01/28/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E4%B8%AD%E6%96%AD%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/%E9%A1%B9%E7%9B%AE%E7%94%9F%E6%88%90%E8%AE%BE%E7%BD%AE.png" alt="项目管理设置"></p><h1>初始化代码后如何书写中断代码</h1><ul class="lvl-0"><li class="lvl-2"><p>找到<big><strong>stm32f1xx_it.c</strong></big>文件</p></li><li class="lvl-2"><p>找到或者创建<big><strong>void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</strong></big>函数</p></li><li class="lvl-2"><p>假设选择的是TIM3定时器，例子如下</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_TIM_PeriodElapsedCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (htim-&gt;Instance == TIM3)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 定时器中断处理代码</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>在<big><strong>stm32f1xx_it.h</strong></big>中添加此声明即可</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> STM32F103C8T6学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基于HAL库学习STM32教程汇总</title>
      <link href="/2025/01/27/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E5%AD%A6%E4%B9%A0STM32%E6%95%99%E7%A8%8B%E6%B1%87%E6%80%BB/"/>
      <url>/2025/01/27/%E5%9F%BA%E4%BA%8EHAL%E5%BA%93%E5%AD%A6%E4%B9%A0STM32%E6%95%99%E7%A8%8B%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Xiaomo_haa/article/details/107448812">HAL库开发之通用定时器中断</a></p><p><a href="https://blog.csdn.net/u010586942/article/details/117489420">关于VScode打开Cubemx直接生成的工程出现报错的解决方法</a></p>]]></content>
      
      
      <categories>
          
          <category> STM32F103C8T6学习学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[关于win11系统更新导致的WSL错误]</title>
      <link href="/2025/01/27/%E5%85%B3%E4%BA%8Ewin11%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E5%AF%BC%E8%87%B4%E7%9A%84WSL%E9%94%99%E8%AF%AF/"/>
      <url>/2025/01/27/%E5%85%B3%E4%BA%8Ewin11%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E5%AF%BC%E8%87%B4%E7%9A%84WSL%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h1>win11系统出现的问题</h1><p><a href="https://img.sosoos.com/i/2025/01/27/821909.webp">WSL文件夹从文件资源管理器中消失</a></p><p><a href="https://img.sosoos.com/i/2025/01/27/951926.webp">无法打开WSL命令行窗口，并且从其他命令行也无法正常实行WSL相关语句</a></p><h1>解决方案</h1><ol><li class="lvl-3"><p>找到C:\Windows.old\WINDOWS\System32\lxss\tools， 应该是能看到bzlimage文件，将该文件路径复制替换掉原来的.wslconfig文件中的bzlimage路径</p></li><li class="lvl-3"><p>以管理员权限打开powershell输入以下指令重新安装WSL</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install -d &lt;你的linux系统版本&gt;</span><br></pre></td></tr></table></figure><h1>原理解释</h1><p>window11系统更新新建了一个windows.old文件夹并将一部分的旧文件挪到了这里，导致WSL的内核文件路径与原来设定的不吻合，因而无法打开wsl</p>]]></content>
      
      
      <categories>
          
          <category> WSL相关问题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建属于自己的静态博客网站</title>
      <link href="/2025/01/22/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
      <url>/2025/01/22/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是静态博客？">什么是静态博客？</h2><p>静态博客是一种基于静态网页技术构建的博客形式</p><ul class="lvl-0"><li class="lvl-2"><p>hexo是一种静态博客框架。我们在本地基于hexo搭建自己的博客内容，再上传到网上作为网页显示</p></li><li class="lvl-2"><p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面</p></li><li class="lvl-2"><p>Github+hexo：在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布</p></li></ul><h2 id="搭建hexo-Github环境">搭建hexo+Github环境</h2><ul class="lvl-0"><li class="lvl-2"><p>创建github账户，下载Node.js，git（小白建议在windows系统上操作，WSL就算了，除非你是抖M（据某位学长所言））</p></li><li class="lvl-2"><p>配置SSH秘钥，与本地绑定（通过在git.bash里输入指令）</p><p>后面可以直接用powershell,cmd等命令行工具直接输入指令</p></li><li class="lvl-2"><p>创建github Pages仓库（新建一个仓库名为usersname.github.io即可，他会自动配备Pages属性）</p></li><li class="lvl-2"><p>下载hexo程序</p><p><a href="https://zhuanlan.zhihu.com/p/60578464">基础操作详情请见</a></p></li></ul><h2 id="使用hexo环境进行个性化配置">使用hexo环境进行个性化配置</h2><p>常见的环境有：next, butterfly, material…</p><p>这里以butterfly主题为例：<a href="https://butterfly.js.org/posts/21cfbf15/">官方教学链接</a></p><h2 id="一些问题补充（我操作时遇到的）">一些问题补充（我操作时遇到的）</h2><h3 id="图片加载问题">图片加载问题</h3><h4 id="使用本地路径上传图片">使用本地路径上传图片</h4><ol><li class="lvl-3"><p>hexo可以直接把本地图片路径转换成网址，所以没有必要找图床生成器</p></li><li class="lvl-3"><p>建议在source文件夹内新建一个picture文件夹专门存放图片，便于管理</p></li><li class="lvl-3"><p>插入图片就可以直接写本地相对路径了</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/source/picture/img.jpg</span><br></pre></td></tr></table></figure><h4 id="使用图床加载图片">使用图床加载图片</h4><p><a href="https://img.sosoos.com/">好用的免费图床生成器</a></p><h3 id="浏览器缓存导致页面无法正常更新问题">浏览器缓存导致页面无法正常更新问题</h3><p>直接询问豆包等AI大模型即可</p><h3 id="无法进入博客页面问题">无法进入博客页面问题</h3><h4 id="DNS被污染">DNS被污染</h4><p>可以通过手动更改DNS（改成114.114.114.114, 8.8.8.8等常用DNS服务器）</p><p>补充知识点：DNS是将域名转化为IP地址的服务器</p><h4 id="github-io-被污染"><a href="http://github.io">github.io</a> 被污染</h4><p>先在命令行输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping github.io</span><br></pre></td></tr></table></figure><p>如果是127.0.0.1（这是本地的IP地址）说明异常</p><p>解决方法</p><ul class="lvl-0"><li class="lvl-2"><p>以管理员身份打开，更改hosts文件夹</p></li><li class="lvl-2"><p>输入：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">github.io真正的IP地址 github.io</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>再ping一次看一下更改是否有效</p></li></ul><h4 id="不小心编辑了CNAME文件，但是自己又没有购买域名">不小心编辑了CNAME文件，但是自己又没有购买域名</h4><p>没有购买域名的情况下，浏览器仍会自动进行跳转然后打不开</p><p>就算将CNAME删除之后，浏览器仍然会机械式地进行跳转</p><p>所以清除浏览器缓存即可</p><h2 id="拓展操作">拓展操作</h2><p><a href="https://akilar.top/posts/3d221bf2/">创建加载动画推荐链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 初学hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
